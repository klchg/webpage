from selenium.webdriver.chrome.options import Options
from selenium import webdriver
import json
from selenium.webdriver.common.keys import Keys
import time
import requests
from bs4 import BeautifulSoup
from requests.cookies import RequestsCookieJar
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.common.by import By
from selenium.webdriver.support import expected_conditions as EC
import random
from selenium.webdriver import ActionChains
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities


def getBrowserConf_ie():
    # create capabilities
    capabilities = DesiredCapabilities.INTERNETEXPLORER

    # delete platform and version keys
    capabilities.pop("platform", None)
    capabilities.pop("version", None)
    # capabilities.
    # start an instance of IE
    driver = webdriver.Ie(executable_path=r"C:\Users\gdhxy\AppData\Local\Programs\Python\Python39\IEDriverServer.exe",
                          capabilities=capabilities)
    return driver

def send_request(driver, url, params, method='POST'):
    if method == 'GET':
        parm_str = ''
        for key, value in params.items():
            parm_str = parm_str + key + '=' + str(value) + '&'
        if parm_str.endswith('&'):
            parm_str = '?'+parm_str[:-1]
        resp = driver.get(url + parm_str)
    else:
        jquery = open("jquery.min.js", "r").read()
        driver.execute_script(jquery)
        ajax_query = '''
                    $.ajax('%s', {
                    type: '%s',
                    data: %s, 
                    crossDomain: true,
                    xhrFields: {
                     withCredentials: true
                    },
                    success: function(){}
                    });
                    ''' % (url, method, params)

        ajax_query = ajax_query.replace(" ", "").replace("\n", "")
        resp = driver.execute_script("return " + ajax_query)
    return resp

def getBrowserConf():
    __browser_url = r'C:\Users\gdhxy\AppData\Local\360Chrome\Chrome\Application\360chrome.exe'  ##360浏览器的地址
    chrome_options = Options()
    chrome_options.add_argument(r'--user-data-dir=C:\Users\gdhxy\AppData\Local\360Chrome\Chrome\User Data')

    chrome_options.binary_location = __browser_url
    # driver = webdriver.Ie()    # 使用ie浏览器

    driver = webdriver.Chrome(options=chrome_options)
    desired_capabilities = DesiredCapabilities.CHROME
    desired_capabilities["pageLoadStrategy"] = "none"
    driver.maximize_window()
    return driver

def loginBrowser(driver):
    driver.get("http://132.96.154.2/EOMS_FT")

    driver.implicitly_wait(3)
    # if driver.find_element_by_xpath('//*[@id="liMPage"]/a').text == '首页':
    #     driver.find_element_by_xpath('//*[@id="liOAPage"]').click()
    #     driver.implicitly_wait(10)
    #     return driver
    # driver.find_element_by_xpath('//*[@id="sAccount"]').send_keys("shengnockds1")
    driver.implicitly_wait(1)
    driver.find_element_by_xpath('//*[@id="sPasswd"]').send_keys("13579Qw99")
    driver.find_element_by_xpath('//*[@id="smsBtnId"]').click()
    # driver.find_element_by_class_name("smsYBtn xw_renzhenBtn").click()
    driver.implicitly_wait(1)

    driver.find_element_by_xpath('//*[@id="verification"]').send_keys("211")
    time.sleep(3)
    driver.implicitly_wait(3)
    driver.find_element_by_xpath('//*[@id="LoginButton"]').click()
    time.sleep(3)
    driver.implicitly_wait(3)
    return driver

def saveCookies(cookies):
    # print(cookies)

    with open("cookies.txt", "w") as fp:
        json.dump(cookies, fp)

def getCookies_request():
    jar = RequestsCookieJar()

    with open("cookies.txt", "r") as fp:
        cookies = json.load(fp)
        for cookie in cookies:
            jar.set(cookie['name'], cookie['value'])
    return jar

def getCookie_selenium():
    with open("cookies.txt", "r") as fp:
        cookies = json.load(fp)
    # for cookie in cookies:
    #     drive.add_cookie(cookie)

    return cookies

def getUrlList_selenium(driver):
    url_3 = 'http://gdeiac-oa.gdtel.com:8081/WorkItems/DefaultPendingList.aspx'
    raw_para = '''ScriptManager1: ScriptManager1|PendingWorkListAsyn$dlPending$ctl02$lbShow
__EVENTTARGET: PendingWorkListAsyn$dlPending$ctl02$lbShow
__EVENTARGUMENT: 
__VIEWSTATE: A5f6yv/oiTk1+N/lir72BnY7+SdfhqwnM0bBJygOavvS5PcJFFlIV/dqKdzXxlWULm8ROXgb9t05+fPiiy415OqAp+8HXtiXf6LWVY6zplXhjhQyc51vkAOkdlDk2mWJC9uZIf0Jl2DWo4dv03u3xDeOBPPW5uygc6lWRs15ns89+t8T9NXHOJLuDJLkFd0Uwsz9l0IkCFcaPE79QWzhzmIz0Drxw1J6ORAUrfjrfhW+tkfp5zygsnK5EGIQq7uXi4SUVG5tYSPSu0149LCfJyhgkPwpJ8mR2QFWI9yQaK1RLBZj9wUjHxvLk0kPgjparftfkd/A1fMWL8WQVD66IRM5vH/S75ZdQBA4kMSSnmHFtATX7Z3gLdcfA+gRuwwPIvu5sj8k7wx4Qfq2Fc7f2VIdjoWJ2wREJ0XEbzKgPe5UPTZpkpO012TlQGUa7cmcCu9WREieFF8f1Wc+rcRWarRY2wDh5QD1IfZXNCtq9GmIlSkiIARBZWjh3N/ZqwDg5bAMu0tCptUGAuxm1Lip65HJX1XaGHlDpyxoYtDHDQKnPIEQFt+midgjGDIVwj0NAhV8N6I3QFSv2XggbHVMEPDcPQkTuAr+p9MkgvToT1r4u+WFjoNEuKz22QJRcUrYhCoKMmY1ORKuBhrfDM2Sjxdwsw6K7aAKIFxsC0luTqGqeHStZGnMz0W23UFsjFbYMRRmfEoz9KuR/osqtk0q5uUY4xbIICirvY7RSN0DLOAkCJvSDkp4oLjAwfPjajKYOp4x30qcoTBF8My19aoeznQ+fhPUIDTt01YeqBEGmYN5z5rbzB+Oyw8UGRJ5XVmaasYkqcZIaJdHFCNoN5oMjwL3TMTPJNS8+zCu4ypuq0VsFdHQgiEgF8cN90W3h4Xc0jP+xPcvCgKrk+1n7E8bmiGCPYVPr4hxCfUr2Wn0qjCoTLNciG2hw7wGFMCvjka8KIhU

__VIEWSTATEGENERATOR: BC42DCD1
__VIEWSTATEENCRYPTED: 
__EVENTVALIDATION: o7eYMpFhzBY/ZU2ExN6qoyuHL+FZbmfIuG/k93Zy9sgKhweQ8aegvTwAU5e2RdN2vaw0MjqUbNzgrv5Tl2wJc8KK9b//IDlpYfWbLjyqmm83+T3M96v4+0Zc8fFmhS6VZcG0STk8+b80jfb6vMZZmwzz0/q7G4T18yhlQGfDlKW0QdqZG8C3T+HIX2t3paKljEQmgz2IVTYb21r12NTMKJFdbl+R8NZMN1kHfhMgsyIIfHFDO6q8hVYONCsyrq29CXR1XSF7axnJuW7zb+fxOt+VwuChOqc98/QJqAokUvU+lBOFWkW+SKxKuawxnpIBVabnS8jEO9nnKeNQJmWVwFomkK/GaX7F8HF/s41Avan5Dlx0qMSxVEXZjH/I/wB/D2xTOUp90IKxmacAvVkjmYDDmyYoXHNRHEValFo5nFN/KsgI234/+ZecIGohzPZbdZt93PdsqNXrGiNwnMp6Nv6UTJ5CsP4YG8zwOdD2kgdovBGNT67zfkJbHh83Y/jaBNAzuh+EL+aX5Cq1819ndImaaeIuSKwnGl9wFZA94Lnp5nuFxbVyMqcUD9w6+bOXUkXAETG2tRMuJruE2yvxe/IV4nqgZ+3oaToCzruuJ5tjLsRKdK0/S92/R/+obMBSak6/X6e3fDXcN7mcYAnPG6XoR5leC7wccyoX6kzphdzI3Sam0W0JiCCp8RVKp76Tz5h0nqXh7kWGjy4oh/VOOCxpB4oGtHvMMavvkRrUPCaEnLb3d5GxEg48kZpxVL0DAIrqjc3ibPElD5Z2ubdcUzVYyYb24WitduTeU5ty4x4sOWMjKJoHRxYDWbI/qMkuL+ibO1xoIs7MJOhwYZW1bJrUFIIGnGeKhQH4If2nq6aQWccu00EwHFj5ZLSa3LPX3/dfr9ZRVG9VQxmIMttQb0eTWKwv9YzAZ8fZp0495+bqgVY0QE5Z6U6KjKdVg6b/oU3NrD7OV464cBOig+qDTDpsxQLUU0hMOSfOeQiC9qbcexWB4a+IX6vvzh3nwAvuQdoWIK4seSz6FDQiJ06bl6nzEo3A57z/lNGzuyCyPt6KGUS3YHQ/z8ea3ePWKykHFxukCx9jek6htTdgfbF+h+pjkAIC5K20s5q1DzSP9J2Bo+7ur4N8Sg8hFf+TLfuXyTFwPoGikl1dzwmuxJGaBZORmwhwfYCWepgzCPFltfPtf1RWxjI3qugv3gDV3nGgB610A1K8KZoXWRdkszBfJo3GmByKRM29QZ3Ys5NafhBwUO6Zn4j3CyVhNrngkrVNldHg3ZLeBs7LpfQqXjQoHPUGBJE938T+T6ARKpFCWLbXn3BHGAQcWMpcaaclof44gg6tfQ7GD+VcfPmBcxQTp3HC5mJgjgF8M0Yf5dkijsCvL9DwkHdRVgoSTrq7xcPlHjyPNAvk1hy3lR1nFq571OmW45u5CY8DtXUJNJLD1+BjbmQMZeq1sYz1BBOIy+9DxY+/eLyVQXI5wW05ol6vwc6YKcwfMk6Z6z9WLAw76zlmqAM1FwpUXGNOjFQtz61VSPEYAqUZXJ6PvtwjOqlDGeYUlrvZ2lWJnfiuRzp1b9CRws9b9o7rehY+2qJ8n0OObgsWdvSdi1FCFgyHy3QcaU4LUAhZ/gXxGS5yCQHPxf8WaUjNCyZDIaoP+PAzEPvi5AA/7NtBzxu1705w9oB8UfJA9FdtXu/oXuihabV2XX4qCF6S
PendingUrgentWorkListAsyn$hfUserID: UR1500051162
PendingUrgentWorkListAsyn$hfDeptID: OR1500022543
PendingUrgentWorkListAsyn$hfModelAlias: 
PendingUrgentWorkListAsyn$hfIsUrgent: True
PendingUrgentWorkListAsyn$hfPriority: 0
PendingUrgentWorkListAsyn$hfBatchReadIDS: 
PendingUrgentWorkListAsyn$hfBatchSignIDS: 
PendingWorkListAsyn$dlPending$ctl01$hfAppId: 
PendingWorkListAsyn$dlPending$ctl01$hfModelAlias: EIAC_OA_AT_BusinessTrip
PendingWorkListAsyn$dlPending$ctl01$hfOpened: 
PendingWorkListAsyn$dlPending$ctl02$hfAppId: 
PendingWorkListAsyn$dlPending$ctl02$hfModelAlias: EIAC_OA_AT_LocalOfficialBusiness
PendingWorkListAsyn$dlPending$ctl02$hfOpened: 
PendingWorkListAsyn$dlPending$ctl03$hfAppId: 
PendingWorkListAsyn$dlPending$ctl03$hfModelAlias: EIAC_OA_AT_VacationApprove
PendingWorkListAsyn$dlPending$ctl03$hfOpened: 
PendingWorkListAsyn$dlPending$ctl04$hfAppId: 
PendingWorkListAsyn$dlPending$ctl04$hfModelAlias: EIAC_OA_NOC_C_KQ_BusinessTrip
PendingWorkListAsyn$dlPending$ctl04$hfOpened: 
PendingWorkListAsyn$dlPending$ctl05$hfAppId: 
PendingWorkListAsyn$dlPending$ctl05$hfModelAlias: EIAC_OA_NOC_C_KQ_VacationApprove
PendingWorkListAsyn$dlPending$ctl05$hfOpened: 
PendingWorkListAsyn$dlPending$ctl06$hfAppId: 
PendingWorkListAsyn$dlPending$ctl06$hfModelAlias: EIAC-OA-BIZ-07FD81
PendingWorkListAsyn$dlPending$ctl06$hfOpened: 
PendingWorkListAsyn$dlPending$ctl07$hfAppId: 
PendingWorkListAsyn$dlPending$ctl07$hfModelAlias: EIAC-OA-Business-CheckBroadband
PendingWorkListAsyn$dlPending$ctl07$hfOpened: 
PendingWorkListAsyn$dlPending$ctl08$hfAppId: 
PendingWorkListAsyn$dlPending$ctl08$hfModelAlias: EIAC-OA-DOC-C-WorkContactBill
PendingWorkListAsyn$dlPending$ctl08$hfOpened: 
PendingWorkListAsyn$dlPending$ctl09$hfAppId: 
PendingWorkListAsyn$dlPending$ctl09$hfModelAlias: EIAC-OA-DOC-PD-DocumentIssueProvinceDept
PendingWorkListAsyn$dlPending$ctl09$hfOpened: 
PendingWorkListAsyn$dlPending$ctl10$hfAppId: 
PendingWorkListAsyn$dlPending$ctl10$hfModelAlias: EIAC-OA-DOC-P-DocumentDirectTransmit
PendingWorkListAsyn$dlPending$ctl10$hfOpened: 
PendingWorkListAsyn$dlPending$ctl11$hfAppId: 
PendingWorkListAsyn$dlPending$ctl11$hfModelAlias: EIAC-OA-DOC-P-DocumentIssueProvince
PendingWorkListAsyn$dlPending$ctl11$hfOpened: 
PendingWorkListAsyn$dlPending$ctl12$hfAppId: 
PendingWorkListAsyn$dlPending$ctl12$hfModelAlias: EIAC-OA-DOC-P-ElectronicLetters
PendingWorkListAsyn$dlPending$ctl12$hfOpened: 
PendingWorkListAsyn$dlPending$ctl13$hfAppId: 
PendingWorkListAsyn$dlPending$ctl13$hfModelAlias: EIAC-OA-DOC-P-MeetingNoticeV0.1
PendingWorkListAsyn$dlPending$ctl13$hfOpened: 
PendingWorkListAsyn$dlPending$ctl14$hfAppId: 
PendingWorkListAsyn$dlPending$ctl14$hfModelAlias: EIAC-OA-DOC-P-Memorandum
PendingWorkListAsyn$dlPending$ctl14$hfOpened: 
PendingWorkListAsyn$dlPending$ctl15$hfAppId: 
PendingWorkListAsyn$dlPending$ctl15$hfModelAlias: EIAC-OA-DOC-P-TrainNotice
PendingWorkListAsyn$dlPending$ctl15$hfOpened: 
PendingWorkListAsyn$dlPending$ctl16$hfAppId: 
PendingWorkListAsyn$dlPending$ctl16$hfModelAlias: EIAC-OA-DOC-P-WorkMessageIssueV0.1
PendingWorkListAsyn$dlPending$ctl16$hfOpened: 
PendingWorkListAsyn$dlPending$ctl17$hfAppId: 
PendingWorkListAsyn$dlPending$ctl17$hfModelAlias: EIAC-OA-ITStandard-AccountRigth-Mng
PendingWorkListAsyn$dlPending$ctl17$hfOpened: 
PendingWorkListAsyn$dlPending$ctl18$hfAppId: 
PendingWorkListAsyn$dlPending$ctl18$hfModelAlias: EIAC-OA-QS-HQ-Request-Communicate
PendingWorkListAsyn$dlPending$ctl18$hfOpened: 
PendingWorkListAsyn$dlPending$ctl19$hfAppId: 
PendingWorkListAsyn$dlPending$ctl19$hfModelAlias: EIAC-OA-QS-ServerPrefixApply
PendingWorkListAsyn$dlPending$ctl19$hfOpened: 
PendingWorkListAsyn$dlPending$ctl20$hfAppId: ProApp
PendingWorkListAsyn$dlPending$ctl20$hfModelAlias: GDCLOUD_WORKFLOW
PendingWorkListAsyn$dlPending$ctl20$hfOpened: 
PendingWorkListAsyn$dlPending$ctl21$hfAppId: ProApp
PendingWorkListAsyn$dlPending$ctl21$hfModelAlias: gejieshenpi
PendingWorkListAsyn$dlPending$ctl21$hfOpened: 
PendingWorkListAsyn$dlPending$ctl22$hfAppId: ProApp
PendingWorkListAsyn$dlPending$ctl22$hfModelAlias: linshishengchanrenwuzidan
PendingWorkListAsyn$dlPending$ctl22$hfOpened: 
PendingWorkListAsyn$dlPending$ctl23$hfAppId: ProApp
PendingWorkListAsyn$dlPending$ctl23$hfModelAlias: SG_GD_PROJECT
PendingWorkListAsyn$dlPending$ctl23$hfOpened: 
PendingWorkListAsyn$dlPending$ctl24$hfAppId: ProApp
PendingWorkListAsyn$dlPending$ctl24$hfModelAlias: yunweirenwu
PendingWorkListAsyn$dlPending$ctl24$hfOpened: 
PendingWorkListAsyn$hfUserID: UR1500051162
PendingWorkListAsyn$hfDeptID: OR1500022543
PendingWorkListAsyn$hfModelAlias: 
PendingWorkListAsyn$hfIsUrgent: False
PendingWorkListAsyn$hfPriority: 0
PendingWorkListAsyn$hfBatchReadIDS: 
PendingWorkListAsyn$hfBatchSignIDS: 
PendingReadListAsyn$dlPending$ctl01$hfAppId: 
PendingReadListAsyn$dlPending$ctl01$hfModelAlias: EIAC-OA-DOC-C-WorkContactBill
PendingReadListAsyn$dlPending$ctl01$hfOpened: 
PendingReadListAsyn$dlPending$ctl02$hfAppId: 
PendingReadListAsyn$dlPending$ctl02$hfModelAlias: EIAC-OA-DOC-PD-DocumentIssueProvinceDept
PendingReadListAsyn$dlPending$ctl02$hfOpened: 
PendingReadListAsyn$dlPending$ctl03$hfAppId: 
PendingReadListAsyn$dlPending$ctl03$hfModelAlias: EIAC-OA-DOC-P-DeptWorkMessageIssue
PendingReadListAsyn$dlPending$ctl03$hfOpened: 
PendingReadListAsyn$dlPending$ctl04$hfAppId: 
PendingReadListAsyn$dlPending$ctl04$hfModelAlias: EIAC-OA-DOC-P-DocumentDirectTransmit
PendingReadListAsyn$dlPending$ctl04$hfOpened: 
PendingReadListAsyn$dlPending$ctl05$hfAppId: 
PendingReadListAsyn$dlPending$ctl05$hfModelAlias: EIAC-OA-DOC-P-DocumentIssueProvince
PendingReadListAsyn$dlPending$ctl05$hfOpened: 
PendingReadListAsyn$dlPending$ctl06$hfAppId: 
PendingReadListAsyn$dlPending$ctl06$hfModelAlias: EIAC-OA-DOC-P-DocumentReceive
PendingReadListAsyn$dlPending$ctl06$hfOpened: 
PendingReadListAsyn$dlPending$ctl07$hfAppId: 
PendingReadListAsyn$dlPending$ctl07$hfModelAlias: EIAC-OA-DOC-P-ElectronicLetters
PendingReadListAsyn$dlPending$ctl07$hfOpened: 
PendingReadListAsyn$dlPending$ctl08$hfAppId: 
PendingReadListAsyn$dlPending$ctl08$hfModelAlias: EIAC-OA-DOC-P-MeetingMemoirProvince
PendingReadListAsyn$dlPending$ctl08$hfOpened: 
PendingReadListAsyn$dlPending$ctl09$hfAppId: 
PendingReadListAsyn$dlPending$ctl09$hfModelAlias: EIAC-OA-DOC-P-MeetingNoticeV0.1
PendingReadListAsyn$dlPending$ctl09$hfOpened: 
PendingReadListAsyn$dlPending$ctl10$hfAppId: 
PendingReadListAsyn$dlPending$ctl10$hfModelAlias: EIAC-OA-DOC-P-Memorandum
PendingReadListAsyn$dlPending$ctl10$hfOpened: 
PendingReadListAsyn$dlPending$ctl11$hfAppId: 
PendingReadListAsyn$dlPending$ctl11$hfModelAlias: EIAC-OA-DOC-P-TrainNotice
PendingReadListAsyn$dlPending$ctl11$hfOpened: 
PendingReadListAsyn$dlPending$ctl12$hfAppId: 
PendingReadListAsyn$dlPending$ctl12$hfModelAlias: EIAC-OA-DOC-P-WorkMessageIssueV0.1
PendingReadListAsyn$dlPending$ctl12$hfOpened: 
PendingReadListAsyn$dlPending$ctl13$hfAppId: 
PendingReadListAsyn$dlPending$ctl13$hfModelAlias: EIAC-OA-DOC-P-WorkNotice
PendingReadListAsyn$dlPending$ctl13$hfOpened: 
PendingReadListAsyn$dlPending$ctl14$hfAppId: 
PendingReadListAsyn$dlPending$ctl14$hfModelAlias: EIAC-OA-MSS-PB-XM-CYZY-Province
PendingReadListAsyn$dlPending$ctl14$hfOpened: 
PendingReadListAsyn$dlPending$ctl15$hfAppId: 
PendingReadListAsyn$dlPending$ctl15$hfModelAlias: EIAC-OA-MSS-PB-XM-GYS-Province
PendingReadListAsyn$dlPending$ctl15$hfOpened: 
PendingReadListAsyn$hfUserID: UR1500051162
PendingReadListAsyn$hfDeptID: OR1500022543
PendingReadListAsyn$hfModelAlias: 
PendingReadListAsyn$hfIsUrgent: False
PendingReadListAsyn$hfPriority: 2
PendingReadListAsyn$hfBatchReadIDS: '''
    para = {}  # 参数要求传入字典
    for each in raw_para.split('\n'):
        key, value = each.split(':', 1)
        para[key] = value.replace(" ", "")  # 去除多余空格
    resp = send_request(driver, url_3, para, 'POST')
    soup = BeautifulSoup(resp, 'lxml')
    linkList = []
    for link in soup.find_all('a', class_='normal'):  # ,string='更多'
        # print(link)
        try:
            # print(link.get('title') + '\n' + link.get('id') + '\n' + link.get('onclick') + '\n' + link.get('href'))
            linkList.append(link.get('onclick'))
        except:
            # print(link.get('href'))
            pass
    urlList = []
    for line in linkList:
        line = line.replace("Action(this,'", "").replace("','", "|").replace("')", "").split("|")
        url = "%sProcess.aspx?InstanceID=%s&ProcessID=%s&Operation=Deal&state=pending&userorgid=%s&SurrogateUID=&type=work&params-random=%s" % (
        line[5], line[0], line[1], line[4], random.random())
        urlList.append(url)

        # print(url)
    return urlList

def getUrlList_requst(cookies):
    sess = requests.Session()
    sess.headers.clear()

    for cookie in cookies:
        sess.cookies.set(cookie['name'], cookie['value'])

    print(sess.cookies)

    url_3 = 'http://gdeiac-oa.gdtel.com:8081/WorkItems/DefaultPendingList.aspx'

    headers = {
        'Accept': 'text/javascript, application/javascript, application/ecmascript, application/x-ecmascript, */*; q=0.01Accept-Encoding: gzip, deflate,Accept-Language: zh-CN,zh;q=0.9',
        # 'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.122 Safari/537.36',
        # 'cookie':cookies,
    }
    raw_para = '''ScriptManager1: ScriptManager1|PendingWorkListAsyn$dlPending$ctl02$lbShow
__EVENTTARGET: PendingWorkListAsyn$dlPending$ctl02$lbShow
__EVENTARGUMENT: 
__VIEWSTATE: 
__VIEWSTATEGENERATOR: BC42DCD1
__VIEWSTATEENCRYPTED: 
__EVENTVALIDATION: o7eYMpFhzBY/ZU2ExN6qoyuHL+FZbmfIuG/k93Zy9sgKhweQ8aegvTwAU5e2RdN2vaw0MjqUbNzgrv5Tl2wJc8KK9b//IDlpYfWbLjyqmm83+T3M96v4+0Zc8fFmhS6VZcG0STk8+b80jfb6vMZZmwzz0/q7G4T18yhlQGfDlKW0QdqZG8C3T+HIX2t3paKljEQmgz2IVTYb21r12NTMKJFdbl+R8NZMN1kHfhMgsyIIfHFDO6q8hVYONCsyrq29CXR1XSF7axnJuW7zb+fxOt+VwuChOqc98/QJqAokUvU+lBOFWkW+SKxKuawxnpIBVabnS8jEO9nnKeNQJmWVwFomkK/GaX7F8HF/s41Avan5Dlx0qMSxVEXZjH/I/wB/D2xTOUp90IKxmacAvVkjmYDDmyYoXHNRHEValFo5nFN/KsgI234/+ZecIGohzPZbdZt93PdsqNXrGiNwnMp6Nv6UTJ5CsP4YG8zwOdD2kgdovBGNT67zfkJbHh83Y/jaBNAzuh+EL+aX5Cq1819ndImaaeIuSKwnGl9wFZA94Lnp5nuFxbVyMqcUD9w6+bOXUkXAETG2tRMuJruE2yvxe/IV4nqgZ+3oaToCzruuJ5tjLsRKdK0/S92/R/+obMBSak6/X6e3fDXcN7mcYAnPG6XoR5leC7wccyoX6kzphdzI3Sam0W0JiCCp8RVKp76Tz5h0nqXh7kWGjy4oh/VOOCxpB4oGtHvMMavvkRrUPCaEnLb3d5GxEg48kZpxVL0DAIrqjc3ibPElD5Z2ubdcUzVYyYb24WitduTeU5ty4x4sOWMjKJoHRxYDWbI/qMkuL+ibO1xoIs7MJOhwYZW1bJrUFIIGnGeKhQH4If2nq6aQWccu00EwHFj5ZLSa3LPX3/dfr9ZRVG9VQxmIMttQb0eTWKwv9YzAZ8fZp0495+bqgVY0QE5Z6U6KjKdVg6b/oU3NrD7OV464cBOig+qDTDpsxQLUU0hMOSfOeQiC9qbcexWB4a+IX6vvzh3nwAvuQdoWIK4seSz6FDQiJ06bl6nzEo3A57z/lNGzuyCyPt6KGUS3YHQ/z8ea3ePWKykHFxukCx9jek6htTdgfbF+h+pjkAIC5K20s5q1DzSP9J2Bo+7ur4N8Sg8hFf+TLfuXyTFwPoGikl1dzwmuxJGaBZORmwhwfYCWepgzCPFltfPtf1RWxjI3qugv3gDV3nGgB610A1K8KZoXWRdkszBfJo3GmByKRM29QZ3Ys5NafhBwUO6Zn4j3CyVhNrngkrVNldHg3ZLeBs7LpfQqXjQoHPUGBJE938T+T6ARKpFCWLbXn3BHGAQcWMpcaaclof44gg6tfQ7GD+VcfPmBcxQTp3HC5mJgjgF8M0Yf5dkijsCvL9DwkHdRVgoSTrq7xcPlHjyPNAvk1hy3lR1nFq571OmW45u5CY8DtXUJNJLD1+BjbmQMZeq1sYz1BBOIy+9DxY+/eLyVQXI5wW05ol6vwc6YKcwfMk6Z6z9WLAw76zlmqAM1FwpUXGNOjFQtz61VSPEYAqUZXJ6PvtwjOqlDGeYUlrvZ2lWJnfiuRzp1b9CRws9b9o7rehY+2qJ8n0OObgsWdvSdi1FCFgyHy3QcaU4LUAhZ/gXxGS5yCQHPxf8WaUjNCyZDIaoP+PAzEPvi5AA/7NtBzxu1705w9oB8UfJA9FdtXu/oXuihabV2XX4qCF6S
PendingUrgentWorkListAsyn$hfUserID: UR1500051162
PendingUrgentWorkListAsyn$hfDeptID: OR1500022543
PendingUrgentWorkListAsyn$hfModelAlias: 
PendingUrgentWorkListAsyn$hfIsUrgent: True
PendingUrgentWorkListAsyn$hfPriority: 0
PendingUrgentWorkListAsyn$hfBatchReadIDS: 
PendingUrgentWorkListAsyn$hfBatchSignIDS: 
PendingWorkListAsyn$dlPending$ctl01$hfAppId: 
PendingWorkListAsyn$dlPending$ctl01$hfModelAlias: EIAC_OA_AT_BusinessTrip
PendingWorkListAsyn$dlPending$ctl01$hfOpened: 
PendingWorkListAsyn$dlPending$ctl02$hfAppId: 
PendingWorkListAsyn$dlPending$ctl02$hfModelAlias: EIAC_OA_AT_LocalOfficialBusiness
PendingWorkListAsyn$dlPending$ctl02$hfOpened: 
PendingWorkListAsyn$dlPending$ctl03$hfAppId: 
PendingWorkListAsyn$dlPending$ctl03$hfModelAlias: EIAC_OA_AT_VacationApprove
PendingWorkListAsyn$dlPending$ctl03$hfOpened: 
PendingWorkListAsyn$dlPending$ctl04$hfAppId: 
PendingWorkListAsyn$dlPending$ctl04$hfModelAlias: EIAC_OA_NOC_C_KQ_BusinessTrip
PendingWorkListAsyn$dlPending$ctl04$hfOpened: 
PendingWorkListAsyn$dlPending$ctl05$hfAppId: 
PendingWorkListAsyn$dlPending$ctl05$hfModelAlias: EIAC_OA_NOC_C_KQ_VacationApprove
PendingWorkListAsyn$dlPending$ctl05$hfOpened: 
PendingWorkListAsyn$dlPending$ctl06$hfAppId: 
PendingWorkListAsyn$dlPending$ctl06$hfModelAlias: EIAC-OA-BIZ-07FD81
PendingWorkListAsyn$dlPending$ctl06$hfOpened: 
PendingWorkListAsyn$dlPending$ctl07$hfAppId: 
PendingWorkListAsyn$dlPending$ctl07$hfModelAlias: EIAC-OA-Business-CheckBroadband
PendingWorkListAsyn$dlPending$ctl07$hfOpened: 
PendingWorkListAsyn$dlPending$ctl08$hfAppId: 
PendingWorkListAsyn$dlPending$ctl08$hfModelAlias: EIAC-OA-DOC-C-WorkContactBill
PendingWorkListAsyn$dlPending$ctl08$hfOpened: 
PendingWorkListAsyn$dlPending$ctl09$hfAppId: 
PendingWorkListAsyn$dlPending$ctl09$hfModelAlias: EIAC-OA-DOC-PD-DocumentIssueProvinceDept
PendingWorkListAsyn$dlPending$ctl09$hfOpened: 
PendingWorkListAsyn$dlPending$ctl10$hfAppId: 
PendingWorkListAsyn$dlPending$ctl10$hfModelAlias: EIAC-OA-DOC-P-DocumentDirectTransmit
PendingWorkListAsyn$dlPending$ctl10$hfOpened: 
PendingWorkListAsyn$dlPending$ctl11$hfAppId: 
PendingWorkListAsyn$dlPending$ctl11$hfModelAlias: EIAC-OA-DOC-P-DocumentIssueProvince
PendingWorkListAsyn$dlPending$ctl11$hfOpened: 
PendingWorkListAsyn$dlPending$ctl12$hfAppId: 
PendingWorkListAsyn$dlPending$ctl12$hfModelAlias: EIAC-OA-DOC-P-ElectronicLetters
PendingWorkListAsyn$dlPending$ctl12$hfOpened: 
PendingWorkListAsyn$dlPending$ctl13$hfAppId: 
PendingWorkListAsyn$dlPending$ctl13$hfModelAlias: EIAC-OA-DOC-P-MeetingNoticeV0.1
PendingWorkListAsyn$dlPending$ctl13$hfOpened: 
PendingWorkListAsyn$dlPending$ctl14$hfAppId: 
PendingWorkListAsyn$dlPending$ctl14$hfModelAlias: EIAC-OA-DOC-P-Memorandum
PendingWorkListAsyn$dlPending$ctl14$hfOpened: 
PendingWorkListAsyn$dlPending$ctl15$hfAppId: 
PendingWorkListAsyn$dlPending$ctl15$hfModelAlias: EIAC-OA-DOC-P-TrainNotice
PendingWorkListAsyn$dlPending$ctl15$hfOpened: 
PendingWorkListAsyn$dlPending$ctl16$hfAppId: 
PendingWorkListAsyn$dlPending$ctl16$hfModelAlias: EIAC-OA-DOC-P-WorkMessageIssueV0.1
PendingWorkListAsyn$dlPending$ctl16$hfOpened: 
PendingWorkListAsyn$dlPending$ctl17$hfAppId: 
PendingWorkListAsyn$dlPending$ctl17$hfModelAlias: EIAC-OA-ITStandard-AccountRigth-Mng
PendingWorkListAsyn$dlPending$ctl17$hfOpened: 
PendingWorkListAsyn$dlPending$ctl18$hfAppId: 
PendingWorkListAsyn$dlPending$ctl18$hfModelAlias: EIAC-OA-QS-HQ-Request-Communicate
PendingWorkListAsyn$dlPending$ctl18$hfOpened: 
PendingWorkListAsyn$dlPending$ctl19$hfAppId: 
PendingWorkListAsyn$dlPending$ctl19$hfModelAlias: EIAC-OA-QS-ServerPrefixApply
PendingWorkListAsyn$dlPending$ctl19$hfOpened: 
PendingWorkListAsyn$dlPending$ctl20$hfAppId: ProApp
PendingWorkListAsyn$dlPending$ctl20$hfModelAlias: GDCLOUD_WORKFLOW
PendingWorkListAsyn$dlPending$ctl20$hfOpened: 
PendingWorkListAsyn$dlPending$ctl21$hfAppId: ProApp
PendingWorkListAsyn$dlPending$ctl21$hfModelAlias: gejieshenpi
PendingWorkListAsyn$dlPending$ctl21$hfOpened: 
PendingWorkListAsyn$dlPending$ctl22$hfAppId: ProApp
PendingWorkListAsyn$dlPending$ctl22$hfModelAlias: linshishengchanrenwuzidan
PendingWorkListAsyn$dlPending$ctl22$hfOpened: 
PendingWorkListAsyn$dlPending$ctl23$hfAppId: ProApp
PendingWorkListAsyn$dlPending$ctl23$hfModelAlias: SG_GD_PROJECT
PendingWorkListAsyn$dlPending$ctl23$hfOpened: 
PendingWorkListAsyn$dlPending$ctl24$hfAppId: ProApp
PendingWorkListAsyn$dlPending$ctl24$hfModelAlias: yunweirenwu
PendingWorkListAsyn$dlPending$ctl24$hfOpened: 
PendingWorkListAsyn$hfUserID: UR1500051162
PendingWorkListAsyn$hfDeptID: OR1500022543
PendingWorkListAsyn$hfModelAlias: 
PendingWorkListAsyn$hfIsUrgent: False
PendingWorkListAsyn$hfPriority: 0
PendingWorkListAsyn$hfBatchReadIDS: 
PendingWorkListAsyn$hfBatchSignIDS: 
PendingReadListAsyn$dlPending$ctl01$hfAppId: 
PendingReadListAsyn$dlPending$ctl01$hfModelAlias: EIAC-OA-DOC-C-WorkContactBill
PendingReadListAsyn$dlPending$ctl01$hfOpened: 
PendingReadListAsyn$dlPending$ctl02$hfAppId: 
PendingReadListAsyn$dlPending$ctl02$hfModelAlias: EIAC-OA-DOC-PD-DocumentIssueProvinceDept
PendingReadListAsyn$dlPending$ctl02$hfOpened: 
PendingReadListAsyn$dlPending$ctl03$hfAppId: 
PendingReadListAsyn$dlPending$ctl03$hfModelAlias: EIAC-OA-DOC-P-DeptWorkMessageIssue
PendingReadListAsyn$dlPending$ctl03$hfOpened: 
PendingReadListAsyn$dlPending$ctl04$hfAppId: 
PendingReadListAsyn$dlPending$ctl04$hfModelAlias: EIAC-OA-DOC-P-DocumentDirectTransmit
PendingReadListAsyn$dlPending$ctl04$hfOpened: 
PendingReadListAsyn$dlPending$ctl05$hfAppId: 
PendingReadListAsyn$dlPending$ctl05$hfModelAlias: EIAC-OA-DOC-P-DocumentIssueProvince
PendingReadListAsyn$dlPending$ctl05$hfOpened: 
PendingReadListAsyn$dlPending$ctl06$hfAppId: 
PendingReadListAsyn$dlPending$ctl06$hfModelAlias: EIAC-OA-DOC-P-DocumentReceive
PendingReadListAsyn$dlPending$ctl06$hfOpened: 
PendingReadListAsyn$dlPending$ctl07$hfAppId: 
PendingReadListAsyn$dlPending$ctl07$hfModelAlias: EIAC-OA-DOC-P-ElectronicLetters
PendingReadListAsyn$dlPending$ctl07$hfOpened: 
PendingReadListAsyn$dlPending$ctl08$hfAppId: 
PendingReadListAsyn$dlPending$ctl08$hfModelAlias: EIAC-OA-DOC-P-MeetingMemoirProvince
PendingReadListAsyn$dlPending$ctl08$hfOpened: 
PendingReadListAsyn$dlPending$ctl09$hfAppId: 
PendingReadListAsyn$dlPending$ctl09$hfModelAlias: EIAC-OA-DOC-P-MeetingNoticeV0.1
PendingReadListAsyn$dlPending$ctl09$hfOpened: 
PendingReadListAsyn$dlPending$ctl10$hfAppId: 
PendingReadListAsyn$dlPending$ctl10$hfModelAlias: EIAC-OA-DOC-P-Memorandum
PendingReadListAsyn$dlPending$ctl10$hfOpened: 
PendingReadListAsyn$dlPending$ctl11$hfAppId: 
PendingReadListAsyn$dlPending$ctl11$hfModelAlias: EIAC-OA-DOC-P-TrainNotice
PendingReadListAsyn$dlPending$ctl11$hfOpened: 
PendingReadListAsyn$dlPending$ctl12$hfAppId: 
PendingReadListAsyn$dlPending$ctl12$hfModelAlias: EIAC-OA-DOC-P-WorkMessageIssueV0.1
PendingReadListAsyn$dlPending$ctl12$hfOpened: 
PendingReadListAsyn$dlPending$ctl13$hfAppId: 
PendingReadListAsyn$dlPending$ctl13$hfModelAlias: EIAC-OA-DOC-P-WorkNotice
PendingReadListAsyn$dlPending$ctl13$hfOpened: 
PendingReadListAsyn$dlPending$ctl14$hfAppId: 
PendingReadListAsyn$dlPending$ctl14$hfModelAlias: EIAC-OA-MSS-PB-XM-CYZY-Province
PendingReadListAsyn$dlPending$ctl14$hfOpened: 
PendingReadListAsyn$dlPending$ctl15$hfAppId: 
PendingReadListAsyn$dlPending$ctl15$hfModelAlias: EIAC-OA-MSS-PB-XM-GYS-Province
PendingReadListAsyn$dlPending$ctl15$hfOpened: 
PendingReadListAsyn$hfUserID: UR1500051162
PendingReadListAsyn$hfDeptID: OR1500022543
PendingReadListAsyn$hfModelAlias: 
PendingReadListAsyn$hfIsUrgent: False
PendingReadListAsyn$hfPriority: 2
PendingReadListAsyn$hfBatchReadIDS: '''

    para = {}  # 参数要求传入字典
    for each in raw_para.split('\n'):
        key, value = each.split(':', 1)
        para[key] = value.replace(" ", "")  # 去除多余空格

    response = requests.post(url_3, headers=headers, data=para)
    soup = BeautifulSoup(response.text, 'lxml')
    print(soup)

    # data = soup.select('listDivClass')

    #类名为xxx而且文本内容为hahaha的div
    for link in soup.find_all('a', class_='normal'):#,string='更多'
        # print(link)
        try:
            print(link.get('title')+'\n'+link.get('id') + '\n' + link.get('onclick') + '\n' + link.get('href'))
        except:
            print(link.get('href'))
    return link

def sngw_selenium(driver, url):
    # js = "window.open(%s)" % url
    # driver.execute_script(js)
    driver.execute_script('window.open("%s");' % url)
    driver.set_page_load_timeout(30)
    time.sleep(30)
    print(driver.page_source)
    driver.switch_to.window(driver.window_handles[-1])
    # driver.implicitly_wait(20)

    print(driver.current_window_handle)
    print(driver.title)

    # driver.switch_to.frame("topFrame")
    # print(driver.page_source)
    # try:
    #     print(driver.find_element_by_xpath('//*[@id="txtEndDate_lbl"]').text)
    # except Exception as e:
    #     print(e)
    return "xxx"


def sngw_requst(url, cookies):
    url = 'http://gdeiac-oawf.gdtel.com/WorkflowServicePlatform/Process.aspx?InstanceID=95ec1375-3c61-4f53-86e0-76ca440e9fdf&ProcessID=99d631b6-5119-4d73-b9df-5ad8c3a95e83&Operation=Deal&state=pending&userorgid=OR1500022543&SurrogateUID=&type=work&params-random=0.16470268281489325'

    sess = requests.Session()
    sess.headers.clear()
    for cookie in cookies:
        sess.cookies.set(cookie['name'], cookie['value'])
    sess.cookies.set('ASP.NET_SessionId', 'qyb00carnx1nf145aj5o1m45')
    sess.cookies.set('form1', '69C9492D393C40D087F3C30CBB8AAB32EC42F6F937AF57837F19683E7D4AEB2A6148D667FCCB4692D83E5712C3EF9B4BEBF7265967F976F18768395DEF1A88E96647E8F79A703C6971D6BCB3AD77A677AC2C75F649DB30E30587F4D81F8F0649AC61DD96506C0DDA33138E100941479A86D42DD6')
    headers = {
        'Accept': 'text/javascript, application/javascript, application/ecmascript, application/x-ecmascript, */*; q=0.01Accept-Encoding: gzip, deflate,Accept-Language: zh-CN,zh;q=0.9',
        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.122 Safari/537.36',
    }

    response = sess.get(url, headers=headers)

    soup = BeautifulSoup(response.text, 'lxml')
    print(soup)

if __name__ == '__main__':
    driver = getBrowserConf()
    driver = loginBrowser(driver)
    # print(driver.page_source)
    driver.get("http://132.96.177.59:1081/DzywApp/admin/cwfList/busiConf/busiConfBill.jsp")
    driver.implicitly_wait(3)
    time.sleep(3)
    driver.switch_to.window(driver.window_handles[-1])
    print(driver.page_source)

    # # driver.quit() //driver.quit()退出驱动关闭所有窗口
    # urlList = getUrlList_selenium(driver)
    # cookies = driver.get_cookies()
    # saveCookies(cookies)
    # # driver = getBrowserConf()
    #
    # # print(urlList[0])
    # # driver = getBrowserConf()
    # # cookies = getCookie_selenium()
    # # for cookie in cookies:
    # #     driver.add_cookie(cookie)
    # # driver.add_cookie(cookies)
    # print(driver.current_window_handle)
    # # actions = ActionChains(driver)
    # # about = driver.find_element_by_xpath('//*[@id="divMenu"]/ul/li[2]/a/span')
    # # 在新的标签页打开“新闻”页面
    # # actions.key_down(Keys.CONTROL).click(about).key_up(Keys.CONTROL).perform()
    # # driver.page_source() = None
    # # driver.implicitly_wait(3)
    # # driver.switch_to.window(driver.window_handles[-1])
    # # time.sleep(3)
    # # driver.close()  #driver.close()关闭当前窗口
    #
    # # driver = getBrowserConf()
    # # print(cookies)
    # # print(type(cookies))
    # # driver.add_cookie(cookies)
    # driver.getEval("selenium.browserbot.getCurrentWindow().document.cookie = 'name=value;path=/'")
    #
    # sngw_selenium(driver, urlList[1])
    # # cookies = getCookies_request()
    # # sngw_requst(urlList[0], cookies)
